{"version":3,"file":"static/js/477.996e5d84.chunk.js","mappings":"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","sources":["hooks/useFetch.js","utils/utils.js","views/Stats/StatsTickets.js","views/Stats/StatsEvent.js","views/Stats/StatsTimeline.js","views/Stats/StatsNumber.js","views/Stats/Stats.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction useFetch(request, hash, identifier) {\n    const baseURL = \"https://hook.doo.integromat.celonis.com/\" + localStorage.getItem(\"webhookURL\");\n\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        if (request) {\n            setLoading(true);\n            console.log(\"Fetch: \" + request + hash + identifier);\n            axios\n                .get(`${baseURL}?request=${request}&hash=${hash}&identifier=${identifier}`)\n                .then((response) => {\n                    setData(response.data);\n                    console.log(response.data);\n                })\n                .catch((err) => {\n                    setError(err);\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        }\n    }, [request, hash, identifier, baseURL]);\n\n    function refetch(request, hash, identifier) {\n        setLoading(true);\n        axios\n            .get(`${baseURL}?request=${request}&hash=${hash}&identifier=${identifier}`)\n            .then((response) => {\n                console.log(response.data);\n                setData(response.data);\n            })\n            .catch((err) => {\n                setError(err);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }\n\n    return { data, loading, error, refetch, setData };\n}\n\nexport default useFetch;\n","// Format a date in a more readable string\nexport function formatDate(date) {\n    var dt = new Date(date);\n    return dt.toLocaleString();\n}\n\n// Checks if a right is valid for checkin\nexport function validateRight(item, checkIns) {\n    if (!item.active) {\n        return false;\n    }\n\n    if (countEntries(item.TidPid, checkIns) >= item.maxEntries) {\n        return false;\n    }\n\n    var valid = false;\n\n    Object.entries(item.timeFrames).forEach(([key, value]) => {\n        var from = new Date(value.validFrom);\n        var till = new Date(value.validTill);\n        if (from < Date.now() && Date.now() < till) {\n            valid = true;\n        }\n    });\n\n    return valid;\n}\n\n// Checks how often a specific id was already checked in\nexport function countEntries(id, checkins) {\n    var count = 0;\n    Object.entries(checkins).forEach(([key, value]) => {\n        if (value.ID === id) {\n            count++;\n        }\n    });\n    return count;\n}\n","import React from \"react\";\nimport {\n    Card,\n    CardContent,\n    Typography,\n    Box,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Chip,\n} from \"@mui/material\";\n\nimport { formatDate } from \"../../utils/utils\";\n\nfunction StatsTickets({ data, loading }) {\n    const checkinElements = data?.rights?.map((item) => {\n        return (\n            <TableRow key={item?.key}>\n                <TableCell>\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                        }}>\n                        <Box>\n                            <Typography\n                                variant=\"h6\"\n                                sx={{\n                                    fontWeight: \"600\",\n                                }}>\n                                {item?.data.Name}\n                            </Typography>\n                            <Typography\n                                color=\"textSecondary\"\n                                sx={{\n                                    fontSize: \"13px\",\n                                }}>\n                                {item?.data.Type}\n                            </Typography>\n                        </Box>\n                    </Box>\n                </TableCell>\n                <TableCell align=\"center\">\n                    {item.data.timeFrames.map((item, index) => {\n                        return (\n                            <Box key={index + item.validFrom}>\n                                <Typography\n                                    sx={{\n                                        fontSize: \"15px\",\n                                        fontWeight: \"500\",\n                                    }}>\n                                    {formatDate(item.validFrom)} -\n                                </Typography>\n                                <Typography\n                                    sx={{\n                                        fontSize: \"15px\",\n                                        fontWeight: \"500\",\n                                    }}>\n                                    {formatDate(item.validTill)}\n                                </Typography>\n                            </Box>\n                        );\n                    })}\n                </TableCell>\n                <TableCell align=\"center\">\n                    {item.data.entryGates.map((item, index) => {\n                        return (\n                            <Typography\n                                key={item}\n                                sx={{\n                                    fontSize: \"15px\",\n                                    fontWeight: \"500\",\n                                }}>\n                                {item}\n                            </Typography>\n                        );\n                    })}\n                </TableCell>\n                <TableCell align=\"center\">\n                    <Typography\n                        sx={{\n                            fontSize: \"15px\",\n                            fontWeight: \"500\",\n                        }}>\n                        {item.data?.maxEntries}\n                    </Typography>\n                </TableCell>\n\n                <TableCell align=\"center\">\n                    <Chip\n                        sx={{\n                            pl: \"4px\",\n                            pr: \"4px\",\n                            backgroundColor: \"success.main\",\n                            color: \"#fff\",\n                        }}\n                        size=\"small\"\n                        label=\"Aktiv\"></Chip>\n                </TableCell>\n            </TableRow>\n        );\n    });\n\n    return (\n        <Card variant=\"outlined\">\n            <CardContent>\n                <Box\n                    sx={{\n                        display: {\n                            sm: \"flex\",\n                            xs: \"block\",\n                        },\n                        alignItems: \"flex-start\",\n                    }}>\n                    <Box>\n                        <Typography\n                            variant=\"h3\"\n                            sx={{\n                                marginBottom: \"0\",\n                            }}\n                            gutterBottom>\n                            Tickets\n                        </Typography>\n                    </Box>\n                </Box>\n                <Box\n                    sx={{\n                        overflow: \"auto\",\n                        mt: 2,\n                    }}>\n                    <Table\n                        aria-label=\"simple table\"\n                        sx={{\n                            mt: 2,\n                            whiteSpace: \"nowrap\",\n                        }}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        variant=\"h6\">\n                                        Name\n                                    </Typography>\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        variant=\"h6\">\n                                        Zeitraum\n                                    </Typography>\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        variant=\"h6\">\n                                        Eingänge\n                                    </Typography>\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        variant=\"h6\">\n                                        Maximale Eintritte\n                                    </Typography>\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                    <Typography\n                                        color=\"textSecondary\"\n                                        variant=\"h6\">\n                                        Aktiv\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>{checkinElements}</TableBody>\n                    </Table>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default StatsTickets;\n","import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { Box, Divider } from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nfunction StatsEvent({ data, loading }) {\n    return (\n        <Card variant=\"outlined\" sx={{ height: 1 }}>\n            <CardContent>\n                <Box\n                    sx={{\n                        display: \"flex\",\n                        alignItems: \"flex-start\",\n                        mb: 3,\n                    }}>\n                    <Box>\n                        <Typography\n                            sx={{\n                                fontWeight: \"500\",\n                                fontSize: \"h3.fontSize\",\n                                marginBottom: \"0\",\n                            }}\n                            gutterBottom>\n                            {loading ? <Skeleton /> : data?.title}\n                        </Typography>\n                        <Typography\n                            color=\"textSecondary\"\n                            variant=\"body1\"\n                            sx={{\n                                fontWeight: \"400\",\n                                fontSize: \"13px\",\n                            }}>\n                            {loading ? <Skeleton /> : data?.short_description}\n                        </Typography>\n                    </Box>\n                    <Box\n                        sx={{\n                            marginLeft: \"auto\",\n                        }}></Box>\n                </Box>\n                <Box>\n                    <Typography\n                        sx={{\n                            fontWeight: \"500\",\n                            fontSize: \"h4.fontSize\",\n                            marginBottom: \"0\",\n                        }}\n                        gutterBottom>\n                        Startdatum\n                    </Typography>\n                    <Typography\n                        color=\"textSecondary\"\n                        variant=\"body1\"\n                        sx={{\n                            fontWeight: \"400\",\n                            fontSize: \"13px\",\n                        }}>\n                        {loading ? <Skeleton /> : data?.start_date}\n                    </Typography>\n                    <Divider sx={{ my: 1 }} />\n                    <Typography\n                        sx={{\n                            fontWeight: \"500\",\n                            fontSize: \"h4.fontSize\",\n                            marginBottom: \"0\",\n                        }}\n                        gutterBottom>\n                        Enddatum\n                    </Typography>\n                    <Typography\n                        color=\"textSecondary\"\n                        variant=\"body1\"\n                        sx={{\n                            fontWeight: \"400\",\n                            fontSize: \"13px\",\n                        }}>\n                        {loading ? <Skeleton /> : data?.end_date}\n                    </Typography>\n                    <Divider sx={{ my: 1 }} />\n                    <Typography\n                        sx={{\n                            fontWeight: \"500\",\n                            fontSize: \"h4.fontSize\",\n                            marginBottom: \"0\",\n                        }}\n                        gutterBottom>\n                        Veranstaltungsort\n                    </Typography>\n                    <Typography\n                        color=\"textSecondary\"\n                        variant=\"body1\"\n                        sx={{\n                            fontWeight: \"400\",\n                            fontSize: \"13px\",\n                        }}>\n                        {loading ? <Skeleton /> : data?.venue_address}\n                    </Typography>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default StatsEvent;\n","import React from \"react\";\nimport { Card, CardContent, Typography, Box } from \"@mui/material\";\n\nimport Chart from \"react-apexcharts\";\n\nfunction StatsTimeline() {\n    const optionssalesoverview = {\n        grid: {\n            show: true,\n            borderColor: \"transparent\",\n            strokeDashArray: 2,\n            padding: {\n                left: 0,\n                right: 0,\n                bottom: 0,\n            },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                columnWidth: \"42%\",\n                endingShape: \"rounded\",\n                borderRadius: 5,\n            },\n        },\n\n        colors: [\"#1e4db7\", \"#a7e3f4\"],\n        fill: {\n            type: \"solid\",\n            opacity: 1,\n        },\n        chart: {\n            offsetX: -15,\n            toolbar: {\n                show: false,\n            },\n            foreColor: \"#adb0bb\",\n            fontFamily: \"'DM Sans',sans-serif\",\n            sparkline: {\n                enabled: false,\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        markers: {\n            size: 0,\n        },\n        legend: {\n            show: false,\n        },\n        xaxis: {\n            type: \"category\",\n            categories: [\n                \"08:00\",\n                \"09:00\",\n                \"10:00\",\n                \"11:00\",\n                \"12:00\",\n                \"13:00\",\n                \"14:00\",\n                \"15:00\",\n                \"16:00\",\n                \"17:00\",\n                \"18:00\",\n                \"19:00\",\n            ],\n            labels: {\n                style: {\n                    cssClass: \"grey--text lighten-2--text fill-color\",\n                },\n            },\n        },\n        yaxis: {\n            show: true,\n            min: 100,\n            max: 400,\n            tickAmount: 3,\n            labels: {\n                style: {\n                    cssClass: \"grey--text lighten-2--text fill-color\",\n                },\n            },\n        },\n        stroke: {\n            show: true,\n            width: 5,\n            lineCap: \"butt\",\n            colors: [\"transparent\"],\n        },\n        tooltip: {\n            theme: \"dark\",\n        },\n    };\n    const seriessalesoverview = [\n        {\n            name: \"Eingang A\",\n            data: [355, 390, 300, 350, 390, 180, 355, 390, 300, 350, 390, 180],\n        },\n        {\n            name: \"Eingang B\",\n            data: [280, 250, 325, 215, 250, 310, 280, 250, 325, 215, 250, 310],\n        },\n    ];\n    return (\n        <Card\n            variant=\"outlined\"\n            sx={{\n                paddingBottom: \"0\",\n            }}>\n            <CardContent\n                sx={{\n                    paddingBottom: \"16px !important\",\n                }}>\n                <Box\n                    sx={{\n                        display: {\n                            sm: \"flex\",\n                            xs: \"block\",\n                        },\n                        alignItems: \"center\",\n                    }}>\n                    <Box>\n                        <Typography\n                            variant=\"h3\"\n                            sx={{\n                                marginBottom: \"0\",\n                            }}\n                            gutterBottom>\n                            Eintritte\n                        </Typography>\n                    </Box>\n                    <Box\n                        sx={{\n                            marginLeft: \"auto\",\n                            display: \"flex\",\n                            mt: {\n                                lg: 0,\n                                xs: 2,\n                            },\n                        }}>\n                        <Box\n                            sx={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                            }}>\n                            <Box\n                                sx={{\n                                    backgroundColor: \"secondary.main\",\n                                    borderRadius: \"50%\",\n                                    height: 8,\n                                    width: 8,\n                                    mr: 1,\n                                }}\n                            />\n                            <Typography\n                                variant=\"h6\"\n                                sx={{\n                                    color: \"secondary.main\",\n                                }}>\n                                Eingang A\n                            </Typography>\n                        </Box>\n                        <Box\n                            sx={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                marginLeft: \"10px\",\n                            }}>\n                            <Box\n                                sx={{\n                                    backgroundColor: \"primary.main\",\n                                    borderRadius: \"50%\",\n                                    height: 8,\n                                    width: 8,\n                                    mr: 1,\n                                }}\n                            />\n                            <Typography\n                                variant=\"h6\"\n                                sx={{\n                                    color: \"primary.main\",\n                                }}>\n                                Eingang B\n                            </Typography>\n                        </Box>\n                    </Box>\n                </Box>\n                <Box\n                    sx={{\n                        marginTop: \"25px\",\n                    }}>\n                    <Chart\n                        options={optionssalesoverview}\n                        series={seriessalesoverview}\n                        type=\"bar\"\n                        height=\"295px\"\n                    />\n                </Box>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default StatsTimeline;\n","import React from \"react\";\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Divider from \"@mui/material/Divider\";\nimport { Box, Skeleton, Typography } from \"@mui/material\";\n\nfunction StatsNumber({ number, description, icon, loading }) {\n    return (\n        <Card variant=\"outlined\" sx={{ height: 1 }}>\n            <Box sx={{ p: 2, display: \"flex\", justifyContent: \"center\" }}>\n                {icon}\n            </Box>\n            <Box textAlign=\"center\" lineHeight={1.25}>\n                <Typography\n                    variant=\"h6\"\n                    fontWeight=\"medium\"\n                    textTransform=\"capitalize\">\n                    {description}\n                </Typography>\n                <Divider sx={{ my: 1 }} />\n\n                <Typography sx={{ m: 1 }} variant=\"h3\" fontWeight=\"medium\">\n                    {loading ? <Skeleton /> : number}\n                </Typography>\n            </Box>\n        </Card>\n    );\n}\n\nexport default StatsNumber;\n","import React from \"react\";\nimport { Grid, Box } from \"@mui/material\";\nimport StatsTickets from \"./StatsTickets\";\nimport StatsEvent from \"./StatsEvent\";\nimport StatsTimeline from \"./StatsTimeline\";\nimport useFetch from \"../../hooks/useFetch\";\nimport StatsNumber from \"./StatsNumber\";\nimport HowToRegIcon from \"@mui/icons-material/HowToReg\";\n\nfunction Stats() {\n    const { data, loading, error } = useFetch(\n        \"stats\",\n        undefined,\n        localStorage.getItem(\"eid\")\n    );\n\n    if (error) console.log(error);\n\n    return (\n        <Box>\n            <Grid container spacing={3}>\n                <Grid container item xs={12} lg={2} spacing={3}>\n                    <Grid item xs={6} lg={12}>\n                        <StatsNumber\n                            loading={loading}\n                            number={data?.checkedInAttendees}\n                            description=\"Check Ins\"\n                            icon={\n                                <HowToRegIcon\n                                    color=\"secondary\"\n                                    fontSize=\"large\"\n                                />\n                            }\n                        />\n                    </Grid>\n                    <Grid item xs={6} lg={12}>\n                        <StatsNumber\n                            loading={loading}\n                            number={data?.allAttendees}\n                            description=\"Registrierungen\"\n                            icon={\n                                <HowToRegIcon\n                                    color=\"secondary\"\n                                    fontSize=\"large\"\n                                />\n                            }\n                            sx={{ height: 1 }}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} lg={10}>\n                    <StatsTimeline data={data} />\n                </Grid>\n                <Grid item xs={12} lg={8}>\n                    <StatsTickets data={data} loading={loading} />\n                </Grid>\n                <Grid item xs={12} lg={4}>\n                    <StatsEvent data={data} loading={loading} />\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default Stats;\n"],"names":["request","hash","identifier","baseURL","localStorage","getItem","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","console","log","axios","concat","then","response","catch","err","finally","refetch","formatDate","date","Date","toLocaleString","validateRight","item","checkIns","active","countEntries","TidPid","maxEntries","valid","Object","entries","timeFrames","forEach","_ref","_ref2","value","from","validFrom","till","validTill","now","id","checkins","count","_ref3","_ref4","ID","_data$rights","checkinElements","rights","map","_item$data","_jsxs","TableRow","children","_jsx","TableCell","Box","sx","display","alignItems","Typography","variant","fontWeight","Name","color","fontSize","Type","align","index","entryGates","Chip","pl","pr","backgroundColor","size","label","key","Card","CardContent","sm","xs","marginBottom","gutterBottom","overflow","mt","Table","whiteSpace","TableHead","TableBody","height","mb","Skeleton","title","short_description","marginLeft","start_date","Divider","my","end_date","venue_address","paddingBottom","lg","borderRadius","width","mr","marginTop","Chart","options","grid","show","borderColor","strokeDashArray","padding","left","right","bottom","plotOptions","bar","horizontal","columnWidth","endingShape","colors","fill","type","opacity","chart","offsetX","toolbar","foreColor","fontFamily","sparkline","enabled","dataLabels","markers","legend","xaxis","categories","labels","style","cssClass","yaxis","min","max","tickAmount","stroke","lineCap","tooltip","theme","series","name","number","description","icon","p","justifyContent","textAlign","lineHeight","textTransform","m","_useFetch","useFetch","undefined","Grid","container","spacing","StatsNumber","checkedInAttendees","HowToRegIcon","allAttendees","StatsTimeline","StatsTickets","StatsEvent"],"sourceRoot":""}