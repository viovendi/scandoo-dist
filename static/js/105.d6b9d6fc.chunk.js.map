{"version":3,"file":"static/js/105.d6b9d6fc.chunk.js","mappings":"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","sources":["hooks/useLocalStorage.js","layouts/FullLayout/Header/Header.js","layouts/FullLayout/Logo/LogoIcon.js","layouts/FullLayout/Sidebar/data.js","layouts/FullLayout/Sidebar/Sidebar.js","layouts/FullLayout/Footer/Footer.js","layouts/FullLayout/FullLayout.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction useLocalStorage(key, defaultValue) {\n    const [value, setValue] = useState(() => {\n        let currentValue;\n\n        try {\n            currentValue = JSON.parse(\n                localStorage.getItem(key) || String(defaultValue)\n            );\n        } catch (error) {\n            currentValue = defaultValue;\n        }\n\n        return currentValue;\n    });\n\n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(value));\n    }, [value, key]);\n\n    return { value, setValue };\n}\n\nexport default useLocalStorage;\n","import React from \"react\";\nimport MenuOutlinedIcon from \"@mui/icons-material/MenuOutlined\";\nimport LocalPrintshopOutlinedIcon from \"@mui/icons-material/LocalPrintshopOutlined\";\nimport HowToRegIcon from \"@mui/icons-material/HowToReg\";\nimport PersonSearchOutlinedIcon from \"@mui/icons-material/PersonSearchOutlined\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { AppBar, Box, IconButton, Toolbar } from \"@mui/material\";\n\nconst Header = (props) => {\n    const navigate = useNavigate();\n\n    return (\n        <AppBar sx={props.sx} elevation={0} className={props.customClass}>\n            <Toolbar>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"menu\"\n                    onClick={props.toggleMobileSidebar}\n                    sx={{\n                        display: {\n                            lg: \"none\",\n                            xs: \"inline\",\n                        },\n                    }}>\n                    <MenuOutlinedIcon width=\"20\" height=\"20\" />\n                </IconButton>\n                <Box flexGrow={1} />\n\n                {props.autoCheckinActivated && (\n                    <>\n                        <HowToRegIcon width=\"20\" height=\"20\" color=\"success\" />\n                        <Box\n                            sx={{\n                                width: \"1px\",\n                                backgroundColor: \"rgba(0,0,0,0.1)\",\n                                height: \"25px\",\n                                mx: 1,\n                            }}></Box>\n                    </>\n                )}\n\n                {props.autoBadgePrintActivated && (\n                    <>\n                        <LocalPrintshopOutlinedIcon\n                            width=\"20\"\n                            height=\"20\"\n                            color=\"success\"\n                        />\n                        <Box\n                            sx={{\n                                width: \"1px\",\n                                backgroundColor: \"rgba(0,0,0,0.1)\",\n                                height: \"25px\",\n                                ml: 1,\n                            }}></Box>\n                    </>\n                )}\n\n                <IconButton\n                    aria-label=\"settings\"\n                    onClick={() => props?.setSearchOpen(true)}>\n                    <PersonSearchOutlinedIcon />\n                </IconButton>\n                <IconButton\n                    aria-label=\"navigateToHome\"\n                    onClick={() => navigate(\"/home\")}>\n                    <HomeIcon />\n                </IconButton>\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Header;\n","import React from \"react\";\nimport logoicn from \"../../../assets/images/logo_doo_blue_web_500.png\";\nimport { Box } from \"@mui/material\";\n\nconst LogoIcon = (props) => {\n    return (\n        <Box component=\"img\" alt=\"Logo\" src={logoicn} sx={{ width: \"100%\" }} />\n    );\n};\n\nexport default LogoIcon;\n","import DashboardOutlined from \"@mui/icons-material/DashboardOutlined\";\nimport SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\nimport InsertChartOutlinedIcon from \"@mui/icons-material/InsertChartOutlined\";\nimport QrCodeScannerOutlinedIcon from \"@mui/icons-material/QrCodeScannerOutlined\";\n\nconst Menuitems = [\n    {\n        title: \"Home\",\n        icon: DashboardOutlined,\n        href: \"/home\",\n    },\n    {\n        title: \"Statistik\",\n        icon: InsertChartOutlinedIcon,\n        href: \"/stats\",\n    },\n    {\n        title: \"Self Service\",\n        icon: QrCodeScannerOutlinedIcon,\n        href: \"/selfService\",\n    },\n    {\n        title: \"Einstellungen\",\n        icon: SettingsOutlinedIcon,\n        href: \"/settings\",\n    },\n];\n\nexport default Menuitems;\n","import React from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport {\n    Box,\n    Drawer,\n    useMediaQuery,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n} from \"@mui/material\";\nimport { SidebarWidth } from \"../../../assets/global/Theme-variable\";\nimport LogoIcon from \"../Logo/LogoIcon\";\nimport Menuitems from \"./data\";\n\nconst Sidebar = (props) => {\n    const [open, setOpen] = React.useState(true);\n    const { pathname } = useLocation();\n    const pathDirect = pathname;\n    const lgUp = useMediaQuery((theme) => theme.breakpoints.up(\"lg\"));\n\n    const handleClick = (index) => {\n        if (open === index) {\n            setOpen((prevopen) => !prevopen);\n        } else {\n            setOpen(index);\n        }\n\n        if (!lgUp) {\n            props.setMobileSidebarOpen(false);\n        }\n    };\n\n    const SidebarContent = (\n        <Box sx={{ p: 3, height: \"calc(100vh - 40px)\" }}>\n            <Link to=\"/\">\n                <Box sx={{ display: \"flex\", alignItems: \"Center\" }}>\n                    <LogoIcon sx={{ width: 1 }} />\n                </Box>\n            </Link>\n\n            <Box>\n                <List\n                    sx={{\n                        mt: 4,\n                    }}>\n                    {Menuitems.map((item, index) => {\n                        //{/********SubHeader**********/}\n\n                        return (\n                            <List\n                                component=\"li\"\n                                disablePadding\n                                key={item.title}>\n                                <ListItem\n                                    onClick={() => handleClick(index)}\n                                    button\n                                    component={NavLink}\n                                    to={item.href}\n                                    selected={pathDirect === item.href}\n                                    sx={{\n                                        mb: 1,\n                                        ...(pathDirect === item.href && {\n                                            color: \"white\",\n                                            backgroundColor: (theme) =>\n                                                `${theme.palette.primary.main}!important`,\n                                        }),\n                                    }}>\n                                    <ListItemIcon\n                                        sx={{\n                                            ...(pathDirect === item.href && {\n                                                color: \"white\",\n                                            }),\n                                        }}>\n                                        <item.icon width=\"20\" height=\"20\" />\n                                    </ListItemIcon>\n                                    <ListItemText>{item.title}</ListItemText>\n                                </ListItem>\n                            </List>\n                        );\n                    })}\n                </List>\n            </Box>\n        </Box>\n    );\n    if (lgUp) {\n        return (\n            <Drawer\n                anchor=\"left\"\n                open={props.isSidebarOpen}\n                variant=\"persistent\"\n                PaperProps={{\n                    sx: {\n                        border: 1,\n                        borderColor: \"info.light\",\n                        width: SidebarWidth,\n                        height: `calc(100vh - 32px)`,\n                        \"&::-webkit-scrollbar\": { display: \"none\" },\n                        m: \"16px\",\n                        borderRadius: \"10px\",\n                        backdropFilter: `saturate(200%) blur(16px)`,\n                        backgroundColor: \"rgba(217, 241, 253, 0.3)\",\n                    },\n                }}>\n                {SidebarContent}\n            </Drawer>\n        );\n    }\n    return (\n        <Drawer\n            anchor=\"left\"\n            open={props.isMobileSidebarOpen}\n            onClose={props.onSidebarClose}\n            PaperProps={{\n                sx: {\n                    width: SidebarWidth,\n                },\n            }}\n            variant=\"temporary\">\n            {SidebarContent}\n        </Drawer>\n    );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport { Box, Link, Typography } from \"@mui/material\";\nconst Footer = () => {\n    return (\n        <Box sx={{ p: 3, textAlign: \"center\" }}>\n            <Typography>\n                © 2023 doo GmbH <Link href=\"https://www.doo.net\">doo.net</Link>{\" \"}\n                - All rights reserved\n            </Typography>\n        </Box>\n    );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport {\n    experimentalStyled,\n    useMediaQuery,\n    Container,\n    Box,\n} from \"@mui/material\";\nimport { Outlet } from \"react-router-dom\";\nimport Header from \"./Header/Header\";\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport Footer from \"./Footer/Footer\";\nimport { TopbarHeight } from \"../../assets/global/Theme-variable\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\n\nconst MainWrapper = experimentalStyled(\"div\")(({ theme }) => ({\n    display: \"flex\",\n    minHeight: \"100vh\",\n    overflow: \"hidden\",\n    width: \"100%\",\n}));\nconst PageWrapper = experimentalStyled(\"div\")(({ theme }) => ({\n    display: \"flex\",\n    flex: \"1 1 auto\",\n    overflow: \"hidden\",\n\n    backgroundColor: theme.palette.background.default,\n    [theme.breakpoints.up(\"lg\")]: {\n        paddingTop: TopbarHeight,\n    },\n    [theme.breakpoints.down(\"lg\")]: {\n        paddingTop: \"64px\",\n    },\n}));\n\nconst FullLayout = () => {\n    //\n    const [isSidebarOpen, setSidebarOpen] = useState(true);\n    const [searchOpen, setSearchOpen] = React.useState(false);\n    const [isMobileSidebarOpen, setMobileSidebarOpen] = useState(false);\n    const lgUp = useMediaQuery((theme) => theme.breakpoints.up(\"lg\"));\n\n    const { value: autoCheckinActivated, setValue: setAutoCheckinActivated } =\n        useLocalStorage(\"autoCheckinActivated\", false);\n    const {\n        value: autoBadgePrintActivated,\n        setValue: setAutoBadgePrintActivated,\n    } = useLocalStorage(\"autoBadgePrintActivated\", false);\n\n    const { pathname } = useLocation();\n\n    return (\n        <MainWrapper>\n            <Header\n                sx={{\n                    paddingLeft:\n                        isSidebarOpen &&\n                        lgUp &&\n                        !pathname.includes(\"selfService\")\n                            ? \"300px\"\n                            : \"\",\n                    backgroundColor: \"#ffffff\",\n                }}\n                toggleSidebar={() => setSidebarOpen(!isSidebarOpen)}\n                toggleMobileSidebar={() => setMobileSidebarOpen(true)}\n                autoCheckinActivated={autoCheckinActivated}\n                autoBadgePrintActivated={autoBadgePrintActivated}\n                setSearchOpen={setSearchOpen}\n            />\n\n            <Sidebar\n                isSidebarOpen={\n                    pathname.includes(\"selfService\") ? false : isSidebarOpen\n                }\n                isMobileSidebarOpen={isMobileSidebarOpen}\n                setMobileSidebarOpen={setMobileSidebarOpen}\n                onSidebarClose={() => setMobileSidebarOpen(false)}\n            />\n\n            <PageWrapper>\n                <Container\n                    maxWidth={false}\n                    sx={{\n                        paddingTop: \"20px\",\n                        paddingLeft:\n                            isSidebarOpen &&\n                            lgUp &&\n                            !pathname.includes(\"selfService\")\n                                ? \"300px!important\"\n                                : \"\",\n                    }}>\n                    <Box sx={{ minHeight: \"calc(100vh - 170px)\" }}>\n                        <Outlet\n                            context={{\n                                autoCheckinActivated,\n                                setAutoCheckinActivated,\n                                autoBadgePrintActivated,\n                                setAutoBadgePrintActivated,\n                                searchOpen,\n                                setSearchOpen,\n                            }}\n                        />\n                    </Box>\n                    <Footer />\n                </Container>\n            </PageWrapper>\n        </MainWrapper>\n    );\n};\n\nexport default FullLayout;\n"],"names":["key","defaultValue","_useState","useState","currentValue","JSON","parse","localStorage","getItem","String","error","_useState2","_slicedToArray","value","setValue","useEffect","setItem","stringify","props","navigate","useNavigate","_jsx","AppBar","sx","elevation","className","customClass","children","_jsxs","Toolbar","IconButton","color","onClick","toggleMobileSidebar","display","lg","xs","MenuOutlinedIcon","width","height","Box","flexGrow","autoCheckinActivated","_Fragment","HowToRegIcon","backgroundColor","mx","autoBadgePrintActivated","LocalPrintshopOutlinedIcon","ml","setSearchOpen","PersonSearchOutlinedIcon","HomeIcon","component","alt","src","title","icon","DashboardOutlined","href","InsertChartOutlinedIcon","QrCodeScannerOutlinedIcon","SettingsOutlinedIcon","_React$useState","React","_React$useState2","open","setOpen","pathDirect","useLocation","pathname","lgUp","useMediaQuery","theme","breakpoints","up","SidebarContent","p","Link","to","alignItems","LogoIcon","List","mt","Menuitems","item","index","disablePadding","ListItem","prevopen","setMobileSidebarOpen","handleClick","button","NavLink","selected","_objectSpread","mb","concat","palette","primary","main","ListItemIcon","ListItemText","Drawer","anchor","isSidebarOpen","variant","PaperProps","border","borderColor","SidebarWidth","m","borderRadius","backdropFilter","isMobileSidebarOpen","onClose","onSidebarClose","textAlign","Typography","MainWrapper","experimentalStyled","_ref","minHeight","overflow","PageWrapper","_ref2","_ref3","flex","background","default","_defineProperty","paddingTop","TopbarHeight","down","setSidebarOpen","searchOpen","_useState3","_useState4","_useLocalStorage","useLocalStorage","setAutoCheckinActivated","_useLocalStorage2","setAutoBadgePrintActivated","Header","paddingLeft","includes","toggleSidebar","Sidebar","Container","maxWidth","Outlet","context","Footer"],"sourceRoot":""}